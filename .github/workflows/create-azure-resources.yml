name: Create Azure Resources

on:
  workflow_dispatch:

jobs:
  create-resources:
    runs-on: ubuntu-latest

    env:
      RESOURCE_GROUP: matvii-nure-resources
      CONTAINER_REGISTRY: matviiacr
      APP_SERVICE_PLAN: matvii-nure
      WEB_APP_BACKEND: matvi-nure-fastapi
      STATIC_WEB_APP: matvi-nure-react
      DB_SERVER: matvii-nure-db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: 1qaz2wsx
      DATABASE_PORT: 5432
      DATABASE_NAME: postgres
      DATABASE_SCHEMA: medmobile

    steps:
      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        run: |
          az group create --name $RESOURCE_GROUP --location eastus

      - name: Create Azure Container Registry
        run: |
          az acr create --resource-group $RESOURCE_GROUP --name $CONTAINER_REGISTRY --sku Basic --admin-enabled true

      - name: Get ACR Admin Credentials
        id: get-acr-creds
        run: |
          echo "ACR_USERNAME=$(az acr credential show -n $CONTAINER_REGISTRY --query 'username' -o tsv)" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$(az acr credential show -n $CONTAINER_REGISTRY --query 'passwords[0].value' -o tsv)" >> $GITHUB_ENV

      - name: Create App Service Plan
        run: |
          az appservice plan create --name $APP_SERVICE_PLAN --resource-group $RESOURCE_GROUP --sku B1 --is-linux

      - name: Check if PostgreSQL Server Exists
        id: check-db
        run: |
          az postgres flexible-server show --resource-group $RESOURCE_GROUP --name $DB_SERVER
        continue-on-error: true

      - name: Create PostgreSQL Database
        if: steps.check-db.outcome == 'failure'
        run: |
          az postgres flexible-server create --resource-group $RESOURCE_GROUP --name $DB_SERVER --admin-user $DATABASE_USER --admin-password $DATABASE_PASSWORD --tier Burstable --sku-name Standard_B1ms --version 13 --yes

      - name: Configure PostgreSQL Firewall
        run: |
          az postgres flexible-server firewall-rule create --resource-group $RESOURCE_GROUP --name $DB_SERVER --rule-name AllowAllAzureIps --start-ip-address 0.0.0.0 --end-ip-address 255.255.255.255

      - name: Retry Backend Web App Creation
        run: |
          for i in {1..3}; do
            az webapp create --resource-group $RESOURCE_GROUP --plan $APP_SERVICE_PLAN --name $WEB_APP_BACKEND --deployment-container-image-name $CONTAINER_REGISTRY.azurecr.io/fastapi-backend:latest && break || sleep 60;
          done

      - name: Set Backend Web App Environment Variables
        run: |
          az webapp config appsettings set --resource-group $RESOURCE_GROUP --name $WEB_APP_BACKEND --settings DATABASE_USER=$DATABASE_USER DATABASE_PASSWORD=$DATABASE_PASSWORD DATABASE_HOST=$DB_SERVER.postgres.database.azure.com DATABASE_PORT=$DATABASE_PORT DATABASE_NAME=$DATABASE_NAME DATABASE_SCHEMA=$DATABASE_SCHEMA

      - name: Create Azure Static Web App
        run: |
          az staticwebapp create --resource-group $RESOURCE_GROUP --name $STATIC_WEB_APP --location eastus2 --sku Free
          
